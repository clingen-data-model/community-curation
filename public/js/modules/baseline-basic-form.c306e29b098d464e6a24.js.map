{"version":3,"sources":["webpack:///./resources/js/components/attestations/forms/BaselineBasic.vue","webpack:///./resources/js/components/attestations/forms/BaselineBasic.vue?2676","webpack:///resources/js/components/attestations/forms/BaselineBasic.vue","webpack:///./resources/js/components/attestations/forms/BaselineBasic.vue?ad9d","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./resources/js/components/attestations/forms/AttestationQuestion.vue","webpack:///./resources/js/components/attestations/forms/AttestationQuestion.vue?8270","webpack:///resources/js/components/attestations/forms/AttestationQuestion.vue","webpack:///./resources/js/components/attestations/forms/AttestationQuestion.vue?e9f5"],"names":["components","AttestationQuestion","props","attestation","type","required","data","questions","name","question","value","hypothesis_id","showHypothesisId","signedAt","canSubmit","watch","deep","handler","methods","checkCanSubmit","console","toggleHypothesisIdQuestion","component","_vm","this","_c","_self","attrs","_v","_l","idx","key","on","$event","$set","directives","rawName","expression","staticClass","slot","domProps","target","composing","_s","user","normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","options","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","call","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat","exports","computed","proxyValue","immediate","get","set","model","callback","$$v"],"mappings":"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","file":"js/modules/baseline-basic-form.c306e29b098d464e6a24.js","sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('attestation-form',{attrs:{\"title\":\"Baseline Annotation Attestation\",\"signable\":_vm.canSubmit}},[_c('p',[_vm._v(\"Please review the statements below and check \\\"Yes\\\" or \\\"No\\\". Then sign your name to signify that you have reviewed these training materials.\")]),_vm._v(\" \"),_vm._l((_vm.questions),function(question,idx){return _c('attestation-question',{key:idx,attrs:{\"question\":question.question,\"value\":\"question.value\",\"name\":question.name,\"required\":question.required},on:{\"input\":function($event){return _vm.$set(question, 'value', $event);}}})}),_vm._v(\" \"),_c('question-block',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showHypothesisId),expression:\"showHypothesisId\"}],staticClass:\"form-inline ml-4\"},[_c('template',{slot:\"question-text\"},[_vm._v(\"\\n            My hypothes.is username: \\n        \")]),_vm._v(\" \"),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.hypothesis_id),expression:\"hypothesis_id\"}],staticClass:\"form-control\",attrs:{\"slot\":\"answer-block\",\"type\":\"text\",\"name\":\"hypothesis_id\"},domProps:{\"value\":(_vm.hypothesis_id)},on:{\"input\":[function($event){if($event.target.composing)return;_vm.hypothesis_id=$event.target.value},function($event){return _vm.checkCanSubmit()}]},slot:\"answer-block\"})],2),_vm._v(\" \"),_c('div',{attrs:{\"slot\":\"signature-text\"},slot:\"signature-text\"},[_vm._v(\"I, \"+_vm._s(_vm.attestation.user.name)+\", attest that as of \"+_vm._s(_vm.signedAt)+\" I have completed all the elements of the Baseline Basic evidence Training.\")])],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BaselineBasic.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BaselineBasic.vue?vue&type=script&lang=js&\"","<template>\n    <attestation-form title=\"Baseline Annotation Attestation\" :signable=\"canSubmit\">\n        <p>Please review the statements below and check \"Yes\" or \"No\". Then sign your name to signify that you have reviewed these training materials.</p>\n\n        <attestation-question\n            v-for=\"(question, idx) in questions\" :key=\"idx\"\n            :question=\"question.question\"\n            value=\"question.value\"\n            :name=\"question.name\"\n            :required=\"question.required\"\n            @input=\"$set(question, 'value', $event);\"\n        >\n        </attestation-question>\n\n\n        <question-block v-show=\"showHypothesisId\" class=\"form-inline ml-4\">\n            <template slot=\"question-text\">\n                My hypothes.is username:&nbsp;\n            </template>\n            <input type=\"text\" v-model=\"hypothesis_id\" slot=\"answer-block\" class=\"form-control\" name=\"hypothesis_id\" @input=\"checkCanSubmit()\">\n        </question-block>\n\n\n        <div slot=\"signature-text\">I, {{attestation.user.name}}, attest that as of {{signedAt}} I have completed all the elements of the Baseline Basic evidence Training.</div>\n    </attestation-form>\n</template>\n<script>\nimport moment from 'moment';\nimport AttestationQuestion from './AttestationQuestion'\n\nexport default {\n    components: {\n        AttestationQuestion\n    },\n    props: {\n        attestation: {\n            type: Object,\n            required: true\n        }\n    },\n    data() {\n        return {\n            questions: [\n                {\n                    name: \"reviewed_annotation_overview\",\n                    question: \"I have reviewed the Baseline Annotation Overview and understand this curation process. *\",\n                    value: null,\n                    required: true,\n                },\n                {\n                    name: \"reviewed_protocol_review\",\n                    question: \"I have reviewed the Baseline Annotation Protocol Review and understand this resource. *\",value: null,\n                    required: \"true\",\n                },\n                {            \n                    name: \"watched_variants_and_nomenclature\",\n                    question: \"I have watched the “Introduction to Variants and Nomenclature” video and understand thi *s process.\",\n                    value: null,\n                    required: \"true\"\n                },\n                {\n                    name: \"watched_into_to_genome_build_and_transcripts\",\n                    question: \"I have watched the “Introduction to genome builds and transcripts” video and understan *d this process.\" ,\n                    value: null,\n                    required: \"true\"\n                },\n                {\n                    name: 'watched_allele_registry_overview',\n                    question: \"I have watched the “Basic Overview of using the ClinGen Allele Registry” video an *d understand this resource.\",\n                    value: null,\n                    required: true\n                },\n                {\n                    name: 'watched_utilizing_clinvar',\n                    question: 'I have watched the “Utilizing ClinVar for Allele Identifiers” video and understand thi *s resource.',\n                    value: null,\n                    required: true\n                },\n                {\n                    name: 'attended_live_training',\n                    question: 'I have attended the live, interactive virtual training session for Baseline Annotation. *',\n                    value: null,\n                    required: true\n                },\n                {\n                    name: 'registered_with_hypothesis',\n                    question: 'I have registered for a hypothes.is user account. *',\n                    value: null,\n                    required: true,\n                }\n            ],\n            hypothesis_id: this.attestation.user.hypothesis_id,\n            showHypothesisId: this.attestation.user.hypothesis_id ? true : false,\n            signedAt: moment().format('YYYY-MM-DD'),\n            canSubmit: false\n        }\n    },\n    watch: {\n        questions: {\n            deep: true,\n            handler: function() {\n                this.toggleHypothesisIdQuestion();\n                this.checkCanSubmit();\n            }\n        }\n    },\n    methods: {\n        checkCanSubmit() {\n                for (let idx in this.questions.filter(q => q.required)) {\n                    console.info('question:', this.questions[idx])\n                    if (this.questions[idx].value != 1) {\n                        this.canSubmit = false;\n                        return;\n                    }\n                }\n                if (this.hypothesis_id === null || this.hypothesis_id == '') {\n                    this.canSubmit = false;\n                    return;\n                }\n\n                this.canSubmit = true;                \n        },\n        toggleHypothesisIdQuestion() {\n            if (this.questions.find(i => i.name == 'registered_with_hypothesis').value == 1) {\n                this.showHypothesisId = true;\n                return;\n            }\n            this.showHypothesisId = false;\n            this.hypothesis_id = this.attestation.user.hypothesis_id;\n\n        }\n    }\n}\n</script>","import { render, staticRenderFns } from \"./BaselineBasic.vue?vue&type=template&id=2c2e6ba8&\"\nimport script from \"./BaselineBasic.vue?vue&type=script&lang=js&\"\nexport * from \"./BaselineBasic.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent(\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */,\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options =\n    typeof scriptExports === 'function' ? scriptExports.options : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) {\n    // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n          injectStyles.call(\n            this,\n            (options.functional ? this.parent : this).$root.$options.shadowRoot\n          )\n        }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection(h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('question-block',{staticClass:\"border-top pt-1 attestation-question\"},[_c('template',{slot:\"question-text\"},[_vm._v(\"\\n            \"+_vm._s(_vm.question)+\"\\n    \")]),_vm._v(\" \"),_c('pre',[_vm._v(_vm._s(_vm.proxyValue))]),_vm._v(\" \"),_c('boolean-radio-group',{staticClass:\"ml-3 mt-1\",attrs:{\"slot\":\"answer-block\",\"name\":_vm.name},slot:\"answer-block\",model:{value:(_vm.proxyValue),callback:function ($$v) {_vm.proxyValue=$$v},expression:\"proxyValue\"}})],2)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AttestationQuestion.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./AttestationQuestion.vue?vue&type=script&lang=js&\"","<template>\n    <question-block class=\"border-top pt-1 attestation-question\">\n        <template slot=\"question-text\">\n                {{question}}\n        </template>\n        <pre>{{proxyValue}}</pre>\n        <boolean-radio-group\n            slot=\"answer-block\"\n            :name=\"name\"\n            v-model=\"proxyValue\"\n            class=\"ml-3 mt-1\"\n        ></boolean-radio-group>\n    </question-block>\n\n</template>\n<script>\nexport default {\n    props: {\n        question: {\n            type: String,\n            required: true\n        },\n        name: {\n            type: String,\n            required: true\n        },\n        value: {\n            type: [String, Number, Object]\n        }\n    },\n    computed: {\n        proxyValue: {\n            immediate: true,\n            get() {\n                return this.value;\n            },\n            set(newValue) {\n                this.$emit('input', newValue);\n            }\n        },\n    }\n}\n</script>","import { render, staticRenderFns } from \"./AttestationQuestion.vue?vue&type=template&id=73df6724&\"\nimport script from \"./AttestationQuestion.vue?vue&type=script&lang=js&\"\nexport * from \"./AttestationQuestion.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}