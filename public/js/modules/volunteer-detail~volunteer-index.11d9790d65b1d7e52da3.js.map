{"version":3,"sources":["webpack:///./resources/js/collections/user_aptitude_collection.js","webpack:///./resources/js/resources/volunteers/find_volunteer.js","webpack:///./resources/js/resources/volunteers/get_all_volunteer_statuses.js","webpack:///./resources/js/collections/aptitude_collection.js","webpack:///./resources/js/entities/assignment.js","webpack:///./resources/js/entities/volunteer.js"],"names":["UserAptitudeCollection","items","this","values","length","item","push","shift","unshift","callback","filter","map","flat","includes","idx","value","userApt","aptitude","is_primary","granted_at","trained_at","pending","trained","Symbol","iterator","findVolunteer","volunteerId","window","axios","get","then","response","Volunteer","data","getAllVolunteerStatuses","statusArray","Object","keys","store","state","configs","volunteers","statuses","name","id","console","log","AptitudeCollection","apt","Assignment","defaults","user_id","assignable_type","assignable_id","assignment_status_id","parent_id","status","assignable","aptitudes","sub_assignments","user_aptitudes","key","attributes","hasOwnProperty","hydrateAttribute","unassignedApts","aptitude_id","asn","collection","forEach","element","volunteer_type","volunteer_status","priorities","latest_priorities","assignments","already_member_cgs","isLoaded","volunteer_type_id","already_clingen_member","assignment","getAssignedActivities","ca","application","self_desc","rawValue","highest_ed","race_ethnicity","race_enthnicity","JSON","parse","stringify"],"mappings":"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","file":"js/modules/volunteer-detail~volunteer-index.11d9790d65b1d7e52da3.js","sourcesContent":["const UserAptitudeCollection = class {\n\n    constructor(items = []) {\n        this.items = items;\n    }\n\n    [Symbol.iterator]() { return this.items.values() }\n\n    get length() {\n        return this.items.length;\n    }\n\n    push(item) {\n        this.items.push(item);\n    }\n\n    shift(item) {\n        this.items.shift(item);\n    }\n\n    unshift(item) {\n        this.items.unshift(item);\n    }\n\n    filter(callback) {\n        return new UserAptitudeCollection(this.items.filter(callback));\n    }\n\n    map(callback) {\n        return new UserAptitudeCollection(this.items.map(callback));\n    }\n\n    flat() {\n        return new UserAptitudeCollection(this.items.flat);\n    }\n\n    includes(item) {\n        return this.items.includes(item);\n    } \n\n    all() {\n        return this.items;\n    }\n\n    get(idx) {\n        return this.items[idx];\n    }\n\n    put(idx, value) {\n        return this.items[idx] = value;\n    }\n\n    primary() {\n        return new UserAptitudeCollection(this.items.filter(userApt => userApt.aptitude.is_primary))\n    }\n\n    secondary() {\n        return new UserAptitudeCollection(this.items.filter(userApt => !userApt.aptitude.is_primary))\n    }\n    \n    granted() {\n        return new UserAptitudeCollection(this.items.filter(userApt => userApt.granted_at != null))\n    }\n    \n    trained() {\n        return new UserAptitudeCollection(this.items.filter(userApt => userApt.trained_at != null))\n    }\n    \n    untrained() {\n        return new UserAptitudeCollection(this.items.filter(userApt => userApt.trained_at === null))\n    }\n    \n    pending() {\n        return new UserAptitudeCollection(this.items.filter(userApt => userApt.granted_at === null))\n    }\n\n    needsAttestation() {\n        return this.pending().trained();\n    }\n}\n\nexport default UserAptitudeCollection;","import Volunteer from './../../entities/volunteer'\n\nconst findVolunteer = async function (volunteerId) {\n    return await window.axios.get('/api/volunteers/'+volunteerId)\n        .then(response => {\n            const volunteer = new Volunteer(response.data.data);\n            return volunteer;\n        });\n}\n\nexport default findVolunteer;","import store from '../../store/index'\n\nconst getAllVolunteerStatuses = async function() {\n    // let data = JSON.parse(localStorage.getItem('volunteer-statuses'));\n\n    // // if (!data) {\n    // window.axios.get('/api/volunteer-statuses').then(response => {\n    //     localStorage.setItem('volunteer-statuses', JSON.stringify(response.data.data))\n    //     return response.data.data\n    // });\n    // // }\n\n    // return data;\n    const statusArray = Object.keys(store.state.configs.volunteers.statuses)\n        .map(name => {\n            return {\n                'name': name,\n                id: store.state.configs.volunteers.statuses[name]\n            }\n        });\n\n    console.log(statusArray);\n    return statusArray;\n}\n\nexport default getAllVolunteerStatuses;","class AptitudeCollection {\n    constructor(items = []) {\n        this.items = items;\n    }\n\n    [Symbol.iterator]() { return this.items.values() }\n\n    get length() {\n        return this.items.length;\n    }\n\n    push(item) {\n        this.items.push(item);\n    }\n\n    shift(item) {\n        this.items.shift(item);\n    }\n\n    unshift(item) {\n        this.items.unshift(item);\n    }\n\n    filter(callback) {\n        return new AptitudeCollection(this.items.filter(callback));\n    }\n\n    map(callback) {\n        return new AptitudeCollection(this.items.map(callback));\n    }\n\n    includes(item) {\n        return this.items.includes(item);\n    } \n\n    all() {\n        return this.items;\n    }\n\n    get(idx) {\n        return this.items[idx];\n    }\n\n    put(idx, value) {\n        return this.items[idx] = value;\n    }\n\n    primary() {\n        return this.filter(apt => apt.is_primary)\n    }\n    secondary() {\n        return this.filter(apt => !apt.is_primary)\n    }\n}\n\nexport default AptitudeCollection;","import AptitudeCollection from '../collections/aptitude_collection'\nimport UserAptitudeCollection from '../collections/user_aptitude_collection'\n\nconst Assignment = class {\n    constructor(data = {}) {\n        let defaults = {\n            id: null,\n            user_id: null,\n            assignable_type: null,\n            assignable_id: null,\n            assignment_status_id: null,\n            parent_id: null,\n            status: {},\n            assignable: {\n                aptitudes: []\n            },\n            sub_assignments: [],\n            user_aptitudes: []\n        }\n\n        this.attributes = {...defaults, ...data};\n\n        for (const key in this.attributes) {\n            if (this.attributes.hasOwnProperty(key)) {\n                this[key] = this.hydrateAttribute(key, data[key]);\n            }\n        }\n    }\n\n    getUnassignedAptitudes() {\n        const unassignedApts = this.assignable.aptitudes.filter(apt => {\n            return !this.user_aptitudes.map(userApt => userApt.aptitude_id).includes(apt.id);\n        });\n        const col =  new AptitudeCollection(unassignedApts);\n        return col;\n    }\n\n    hasSubAssignments()\n    {\n        return this.attributes.sub_assignments.length > 0;\n    }\n\n    hydrateAttribute(key, value)\n    {\n        switch (key) {\n            case 'sub_assignments':\n                if (value == null) {\n                    return value;\n                }\n                return value.map(asn => new Assignment(asn));                \n            case 'user_aptitudes':\n                let collection =  new UserAptitudeCollection();\n                if (!value) {\n                    return collection;\n                }\n                value.forEach(element => {\n                    collection.push(element)\n                });\n                return collection\n            case 'aptitudes':\n                return new AptitudeCollection(value);\n            default:\n                break;\n        }\n        return value;\n    }\n}\n\nexport default Assignment;","import Assignment from './assignment';\n\nlet Volunteer = class {\n    constructor(data = {}) {\n        let defaults = {\n            name: null,\n            id: null,\n            volunteer_type: {\n                id: null,\n                name: '',\n            },\n            volunteer_status: {\n                id: null,\n                name: ''\n            },\n            priorities: [],\n            latest_priorities: [{\n\n            }],\n            assignments: [],\n            already_member_cgs: []\n        };\n\n        this.attributes = {...defaults, ...data };\n\n        for (const key in this.attributes) {\n            if (this.attributes.hasOwnProperty(key)) {\n                this[key] = this.hydrateAttribute(key, data[key]);\n            }\n        }\n    }\n\n    isLoaded() {\n        const loaded = (this.attributes !== null && typeof this.attributes !== 'undefined');\n        return loaded;\n    }\n\n    isBaseline() {\n        if (this.isLoaded()) {\n            return this.attributes.volunteer_type_id == 1;\n        }\n        return false;\n    }\n\n    isComprehensive() {\n        if (this.isLoaded()) {\n            return this.attributes.volunteer_type_id == 2;\n        }\n        return false;\n    }\n\n    isClingenMember() {\n        if (this.isLoaded()) {\n            return this.already_clingen_member == 1;\n        }\n    }\n\n    getAssignedActivities() {\n        if (this.isLoaded) {\n            return this.attributes.assignments.map(assignment => assignment.assignable);\n        }\n        return [];\n    }\n\n    assignedToBaseline() {\n        return this.getAssignedActivities().map(ca => ca.name).includes('Baseline');\n    }\n\n    hydrateAttribute(key, value) {\n        if (key == 'assignments' && value) {\n            value = value.map(asn => new Assignment(asn));\n        }\n        return value;\n    }\n\n    hasApplication() {\n        return typeof this.application != 'undefined' && this.application !== null;\n    }\n\n    hasDemographicInfo() {\n        if (this.application.self_desc.rawValue == null) {\n            return false;\n        }\n        if (this.application.highest_ed.rawValue == null) {\n            return false;\n        }\n        if (this.application.race_ethnicity.rawValue == null || this.application.race_enthnicity == []) {\n            return false;\n        }\n\n        return true;\n    }\n\n    clone() {\n        return new Volunteer(JSON.parse(JSON.stringify(this.attributes)));\n    }\n}\n\nexport default Volunteer;"],"sourceRoot":""}